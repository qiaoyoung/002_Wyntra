name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products

      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app

      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: MIIMiwIBAzCCDFIGCSqGSIb3DQEHAaCCDEMEggw/MIIMOzCCBtcGCSqGSIb3DQEHBqCCBsgwggbEAgEAMIIGvQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQYwDgQIykVJQCW23LUCAggAgIIGkP4YwQpR4JgJvovosAx8P4jKoJJ7mTuTOHJrcPVKkC0w/BNQq3F+enKRa9NYRH22HkST3crGHw+rly7R4ovUUUJ6W3T1S43PIA50SeeC+IWdjTqTb/9st1g7kUHXPr0u1qCXl8xhrAX+TFWxuGDNDyiy6o6RIZbPr/LysLswUJlaIa1TSfWdEVzb7fGLS4cD5eOp+Ajr9wG1Mcj7tqwbP3HTrJo1JFPfGzY3WIxebHE9qjfe0Onp7Tr49DEgYhRbqe4/qilB8rudYSWEUUsUDMvpYq82NKbZ+RI9dfDqKLv/cvso5CVzBMGAOuvc5LiANGtStikaWBnqncJZ+7+hNYj8b0QZxxjhCOK3F52G8dTbprrDY4V6KRVuPel50mXuPnqRCK6SFlR9J+WFjQqUS8BeeviVAoV/kPVH1pw7S16epuLVRmdpymK15XciP2h+x5Cv3mbAxl5I4Mc6oFODoIAwj0eAOCLiix95On+5wwFzMgX6O+EZCfHZbB5lkvfAJzv38X+cvbU6zq/MsFcTYt7Boc4vFD8G5biXP0WVAoKRYT9H6wj5ttlRJST7Ckta+ex9T5YZhbthtqMH1v6+zDHhYrs+Fs2FTAHtIjF+zzUWWvL/NYKkPjjLOOYRko0KZ1XlqWPhJFG0o8SnjGDt4tD2BMyc4IBgQAHfZVq+Gmks5mwEhXy4FTWlTm8nbMwyRGUur4K/akR1UjgjjMiJKzQm63qY6bxheDS9fDamBuW4Tn5Jtl1yPmYwpGna/ddMlm9EEfeAKjkWi6MYYNrSzHq0jjYzfnZqFmxKSXr1QC9CbAM8ZAE3t5JRnTNurO27EWdQ2la1uw6gp2s6tELKT3CI0CzyDmkp8SUhoiebdJSRd1V8qkjeHRETbMLOUMtGQdG0eGMmtydeFntBU3foCaZnW/iWzui2zMelLyarWgKgXnUm6x8wkxYi8bXSejZUBgxIN5gAyXz//BzPC0621PftYfLXGtjcg3DvGIEQFIVhqM8rKjCTtZr0cbRXYCEVtM/cJQg7Dag3Y5QwvibP3Jme31zrAh9dFs8/2S0KKBgvnfN0l0R2izuCsaE+nKCxBPALN6/mA8yPbhVAgTMpgzjdh+keZewDk4nULml+J6oPWpW/Bz+9rhoMMu/CUalhgcCH2NA9ctUj0yKAFzuPJfQMZOtaE/EBP97x9Zcs16glWHR5aQn/ZKwaM6li3MR41CeSv11NpdPuWHCVGIn7vhFopH4OLwhxCPy2moS8JUEwBs9cw41fiNodx8GYDOyXC4io+ww3Jb6134M01rziCwWLPn43fAqic92+/4k3QKJC5TlqF3N8SXtwEAPssbHll1X4RHYPhB9aVHQ6Sl5A6iG7DwI7zng1p83/yyNC4rmDgNTYhUSjGDkdZSoujfxdrBT0HQRXhFMWTnkqEBw7LcHs7pMgiHzLNh8SbCTzSeolc1xnU/4wTjxh7OO707cJ6koHRaheSZhQJbJp6Q+D/tSrHyn/bYA8xN9gqoNvT0izW65CrVMBgEBhHKwZ/Hhp0m3CSdq4DeVtyZsvJGBy8Ls+eKpdceqRRhPzpvN3+QfRB4VjmWDR79FGo9u1hW7M912hK8nOfi96W9hDGmp7367Gjt/zFc0lOYY1OzbDC/u0q1HEHoBBoelowXaWtjAylI1gOVQWYYnSuR5z06/nvnkLW3DG5SyHv6anZMOYzA76gQueTuSgVZQj9e/1Qe23XUqfTjvFEPIRzahXPzlx5n0YDiK/CbrPEVX/huNC6eWMa79g+jy/Xo225hLLWHL47AwxK54HDMmXEEiBuQt4D9P9WjHVwfSYeVrdnVVjyQn7nUtaRFZWXd4JLLOV+roeIxeoP/JxnL8yb0g8YY1CWGl1+36WL3p+y72skdtntZZFUD6Mx9r0RyKX72HMgG/X+pbFrQm90CdaK7aoIS+ZXvawXJJ4G/j67i21qann1HWLi4Zq7XSKduCw0mpUYYatXLUIDwhHXC2StVOL7i//7OE2/r+kixBqowr/sEGSnd1q6r+zO51AR8/Unj3GN93UameHZ2CCGW2hCLSiQkpHvYJZry1JIQeYz+bBm4XPRZ4nscD4DYWT+an5QZPD5WE4cIUMZEmv/4V4/YWXG37I85oiaOxEm7BboLhDmLo3jde/Xui9gS6bGEo6ofMbpNoT8/2loCcR67eosb8aCOptzVl8XJC8bUaWMt4vOdfGs7ii+YfunbEPVBuGElYH3NbmTDCCBVwGCSqGSIb3DQEHAaCCBU0EggVJMIIFRTCCBUEGCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZIhvcNAQwBAzAOBAj6Ij7XM/hymgICCAAEggTIoVw6XX+gT/gYivFMfqhNCULoLORqF+pkRMYVbXYRI0QHxMByyWJXXOdfNIggQ/U8Cy3AaJH5AxtDLTDUG8FnxYcZVmQkoaYvG7tlv+ecLnsxk5VZm41O1zEpWrBNNsLehQgXgrMInndYlXLr8sb4vkBaaBLNnfvl//NT/6zUPT4zKaXKVzpgvcAFsOD8VH+rpg0O1Trskx11ylFSH3VYLLAOULG/9glMBd9sd6fCQ8sE/yg18rjRrFrUy895HcPFX6Xkz5KCWi3wrxd/6XHyV6iT15taguDyKrIEuJqh5dRRajUfLDVD4Xg5zlaG6atDGTaEZ1A/OqdDoKQwqydGtyv+swTIyrFy0GpsgsaGPOSDpC1ZKHEMCyOZOnQJJ+LX7AEOEnWgnG5KMsyLZIgGdiSKyyVbtmPxDG7Ae35WBdlfxqwUWjEgqTuEpSd/WuIxf0BF37t/VZCnRxE1jTMM7Ept1mAvrMk8NVXx/Mtmt21jTCBXaQ2XNWRKpotrqqEP7dolpf0U+psJGMwOIpiQFZ7B7erjVs1r+Ly/wxYGkZ8stCH6OymdfVDdXGEbLowiNfAVhGPSwZIRgiyegsRWJTdS3zG78Va78KRgzy2Q/9dzSPiKl2GnzOU9ESgEkLkdo3aTgJfUB6M33R35hC2bZ0N/+gNDevaGILqtdoKg8iGmbn1/E+dyZpIGjDR3hSFAkS63J7YAmgZboK0vsgWOtBT+D0fLlB7UfKHJs758ITvXEt89OwC2KUPEDml5Mfy2noGqeeNbAkCaBHkQ2jH0D4fqcoF2IxdDpUQZG6WRpBH4Z4utHJThnh6B1EwzD6ap+eUxjRldMfKZhbGeoxlv5NnuQ3huxWR8FrkCfiDunDXQPwHrIY/ET72kDQSlzpT5ohV3yAHWsjlbucmzOxU2KHgpDCctuN9rc7IXWyearMrpXrWeQ9+7vDsWJB/wKlK6+bJzkJKgeLoc2enzibYT5yN1qU3Gi7HYsEyyq3k04St282fYJ0u5WWTxyp3k3i6DFKzGh8KGk1zUuJ+DsIrnKAKuQQPV1l/5wWhqLzjHSNR/KSj4F4Htu4UGHpNSK9FoOiyZ6tdBj8vDlRxBHhAnZPA2SQ/8TrWA37z2O8igNixPnvTjCeekUSV0M+r55oVtYLHZGMb8jdEBeDissBbgwJJOW44MVjj7X8MexCFWFalvVu0I7c62Ze96NsmNWaAtRoSqP2g3+eEfYBhAScpgLMOKb1kF4ksHM9Z3Z7AOMJ7U5K+lr9VBoB/1uSgT+d2Na4RAWNpg2FCSKVHDbyIxOSwiGNgQpcRhu+VSEP4P2oBov3D1vbG1xR8NJBcKdzl70sTANAhVYaSd153LVVcQeDrrUjJiQRE50Fys3glgKwVRttDDQ7AOJKZielgXRb1gT9ki1UMtRou0bekMEJjZreKaHWtm4MMGuKFkDv6UfpCpqm6d7venG78++PTwTTcV052AFkV6U0F+qmGqTzQQs2W04ePZs8p3cLGj4xwD/IKVfHJfwvaB1YAq0ay/LfFbiFfHXLCdchMLMx/00cdJRz66szZZm8z+H+FCh2aXSYffFxZV8RoFekJspmHuWSInLKZCPKHmAY3nHa8vcZ6APHm1HF6iANBpMUAwGQYJKoZIhvcNAQkUMQweCgBhAGQAbQBpAG4wIwYJKoZIhvcNAQkVMRYEFKAulN9305sTGT8y/18BywDn0PVnMDAwITAJBgUrDgMCGgUABBSjJ9vqaKzpA5mtGOTcjtbvVHrW/AQI/Ry8yFeePyACAQE=

          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa

          
      # - name: Upload using iTMSTransporter
      #   env:
      #     WORKING_DIRECTORY: build/ios/ipa
      #     IPA_FILE_NAME: oiyo.ipa
      #     APPLE_USERNAME: Nina2000HH@outlook.com
      #     APPLE_PASSWORD: zeqo-kyio-mlkw-kbwf
      #     APPLE_ASC_PROVIDER: 798RL7J5U7
      #   run: |
      #     cd $WORKING_DIRECTORY
      #     git clone https://github.com/ZhangLi1984/itsm.git
      #     ./itsm/bin/iTMSTransporter -assetFile $IPA_FILE_NAME -u $APPLE_USERNAME -p $APPLE_PASSWORD -m upload -asc_provider $APPLE_ASC_PROVIDER -v verbose

      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/wyntra‌.ipa"
          APPLE_ID: "havefun20250228@outlook.com"
          APP_SPECIFIC_PASSWORD: "fuog-ugst-pvlz-sozg"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
